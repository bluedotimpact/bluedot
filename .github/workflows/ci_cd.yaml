name: ci_cd

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  ci:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout ${{ github.sha }}
        uses: actions/checkout@v4
        with:
          fetch-depth: 10  # Fetch more history to be likely to find a successful commit when identifying affected apps
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'
          registry-url: https://registry.npmjs.org/
      - name: Install NPM dependencies
        run: npm ci
        
      - name: Get affected apps
        id: get_affected_apps
        env:
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_WORKFLOW_NAME: ${{ github.workflow }}
          GH_TOKEN: ${{ github.token }}
        run: |
          TURBO_FILTER=$(node .github/workflows/get-affected-apps.js)
          echo "turbo_filter=$TURBO_FILTER" >> $GITHUB_OUTPUT
          
      - name: Test affected apps
        run: npm run test ${{ steps.get_affected_apps.outputs.turbo_filter }}
        
      - name: Lint affected apps
        run: npm run lint ${{ steps.get_affected_apps.outputs.turbo_filter }}
        
      - name: Build affected apps
        run: npm run build ${{ steps.get_affected_apps.outputs.turbo_filter }}

      - name: Get all apps
        id: get_apps
        run: |
          APPS=$(ls -d apps/*/ | cut -d'/' -f2 | jq -R -s -c 'split("\n")[:-1]')
          echo "apps=$APPS" >> $GITHUB_OUTPUT
    outputs:
      apps: ${{ steps.get_apps.outputs.apps }}

  cd:
    needs: ci
    if: ${{ github.ref == 'refs/heads/master' }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        app: ${{ fromJson(needs.ci.outputs.apps) }}
    concurrency:
      group: cd_${{ matrix.app }}
    timeout-minutes: 20
    steps:
      - name: Checkout ${{ github.sha }}
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          registry-url: https://registry.npmjs.org/

      - name: Get app dependency paths
        id: get_paths
        run: |
          npm install --global turbo
          PATHS=$(node .github/workflows/get-app-paths.js ${{ matrix.app }})
          echo "paths=$PATHS" >> $GITHUB_OUTPUT

      - name: Check if app needs deployment
        id: check_deployment
        uses: fkirc/skip-duplicate-actions@v5
        with:
          paths: ${{ steps.get_paths.outputs.paths }}
          paths_ignore: '["**/README.md"]'
          skip_after_successful_duplicate: false

      - name: Skip deployment
        if: steps.check_deployment.outputs.should_skip == 'true'
        run: |
          echo "Skipping deployment - no relevant changes detected"
          exit 0

      - name: Install NPM dependencies
        if: steps.check_deployment.outputs.should_skip != 'true'
        run: npm ci

      - name: Configure infra deployment
        if: steps.check_deployment.outputs.should_skip != 'true' && matrix.app == 'infra'
        run: |
          echo "$INFRA_PULUMI_PASSPHRASE" > apps/infra/passphrase.prod.txt
          mkdir -p ~/.aws
          echo "$INFRA_AWS_CREDENTIALS" > ~/.aws/credentials
        env:
          INFRA_PULUMI_PASSPHRASE: ${{ secrets.INFRA_PULUMI_PASSPHRASE }}
          INFRA_AWS_CREDENTIALS: ${{ secrets.INFRA_AWS_CREDENTIALS }}

      - name: Configure k8s deployment
        if: steps.check_deployment.outputs.should_skip != 'true' && matrix.app != 'infra'
        run: |
          echo "$GITHUB_TOKEN" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          mkdir -p ~/.kube
          echo "$K8S_KUBECONFIG" > ~/.kube/config
        env:
          K8S_KUBECONFIG: ${{ secrets.K8S_KUBECONFIG }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy
        if: steps.check_deployment.outputs.should_skip != 'true'
        run: npm run deploy:cd --workspace apps/${{ matrix.app }}
