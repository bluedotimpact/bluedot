name: ci_cd

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  TURBO_CACHE_DIR: .turbo

jobs:
  ci:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout ${{ github.sha }}
        uses: actions/checkout@v4
      - name: Cache turbo build setup
        uses: actions/cache@v4
        with:
          path: .turbo
          key: ${{ runner.os }}-turbo-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-turbo-
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'
          registry-url: https://registry.npmjs.org/
      - name: Install NPM dependencies
        run: npm ci
      - name: Lint
        run: npm run lint --if-present
      - name: Build
        run: npm run build --if-present
      - name: Test
        run: npm run test --if-present

      # Get paths that apps are dependent on, e.g. availability depends on apps/availability/** and libaries/ui/**
      - id: get_paths_filter
        run: |
          node .github/workflows/create-paths-filter.js > paths-filter.json
          FILTER=$(cat paths-filter.json)
          echo "paths_filter=$FILTER" >> $GITHUB_OUTPUT

      # Figure out what apps have changed files in their paths
      - id: modified_paths_check
        uses: fkirc/skip-duplicate-actions@v5
        with:
          paths_filter: ${{ steps.get_paths_filter.outputs.paths_filter }}
          paths: '["package-lock.json"]'
          paths_ignore: '["**/README.md"]'

      # Arrange output into one array for CD matrix
      - id: get_apps_to_deploy
        run: |
          # Get all apps
          APPS=$(ls -d apps/*/ | cut -d'/' -f2 | jq -R -s -c 'split("\n")[:-1]')
          
          # If should_skip is false, all apps need deployment
          if [[ "${{ steps.modified_paths_check.outputs.should_skip }}" != "true" ]]; then
            echo "apps=$APPS" >> $GITHUB_OUTPUT
            exit 0
          fi
          
          # Otherwise, filter for apps that need deployment
          PATHS_RESULT='${{ steps.modified_paths_check.outputs.paths_result }}'
          APPS_TO_DEPLOY=$(echo "$APPS" | jq -c "[.[] | select(
            . as \$app |
            ($PATHS_RESULT | .[\$app].should_skip) != true
          )]")
          echo "apps=$APPS_TO_DEPLOY" >> $GITHUB_OUTPUT
    outputs:
      apps_to_deploy: ${{ steps.get_apps_to_deploy.outputs.apps }}

  cd:
    needs: ci
    if: ${{ github.ref == 'refs/heads/master' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: ${{ fromJson(needs.ci.outputs.apps_to_deploy) }}
    concurrency:
      group: cd_${{ matrix.app }}
    timeout-minutes: 20
    steps:
      - name: Checkout ${{ github.sha }}
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          registry-url: https://registry.npmjs.org/

      - name: Install NPM dependencies
        run: npm ci

      - name: Configure infra deployment
        if: matrix.app == 'infra'
        run: |
          echo "$INFRA_PULUMI_PASSPHRASE" > apps/infra/passphrase.prod.txt
          mkdir -p ~/.aws
          echo "$INFRA_AWS_CREDENTIALS" > ~/.aws/credentials
        env:
          INFRA_PULUMI_PASSPHRASE: ${{ secrets.INFRA_PULUMI_PASSPHRASE }}
          INFRA_AWS_CREDENTIALS: ${{ secrets.INFRA_AWS_CREDENTIALS }}

      - name: Configure k8s deployment
        if: matrix.app != 'infra'
        run: |
          docker login https://sjc.vultrcr.com/bluedot -u dbaa58f3-01f1-4fcc-9c14-93cc28f524e0 -p $VULTR_CONTAINER_REGISTRY_PASSWORD
          mkdir -p ~/.kube
          echo "$K8S_KUBECONFIG" > ~/.kube/config
        env:
          K8S_KUBECONFIG: ${{ secrets.K8S_KUBECONFIG }}
          VULTR_CONTAINER_REGISTRY_PASSWORD: ${{ secrets.VULTR_CONTAINER_REGISTRY_PASSWORD }}

      - name: Deploy
        run: npm run deploy:prod --workspace apps/${{ matrix.app }}
