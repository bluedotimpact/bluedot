name: ci_cd

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  ci:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout ${{ github.sha }}
        uses: actions/checkout@v4
        with:
          fetch-depth: 10  # Fetch more history to be likely to find a successful commit when identifying affected apps
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'
          registry-url: https://registry.npmjs.org/
      - name: Install NPM dependencies
        run: npm ci --audit false --fund false
        
      - name: Get affected apps
        id: get_affected_apps
        env:
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_WORKFLOW_NAME: ${{ github.workflow }}
          GH_TOKEN: ${{ github.token }}
        run: |
          TURBO_FILTER=$(npm run turbo_filter --silent --workspace @bluedot/affected-packages)
          echo "turbo_filter=$TURBO_FILTER" >> $GITHUB_OUTPUT
          
      - name: Test affected apps
        run: npx turbo test ${{ steps.get_affected_apps.outputs.turbo_filter }}
        
      - name: Lint affected apps
        run: npx turbo lint ${{ steps.get_affected_apps.outputs.turbo_filter }}
        
      - name: Create .env.local for website
        run: echo "AIRTABLE_PERSONAL_ACCESS_TOKEN=${{ secrets.AIRTABLE_PERSONAL_ACCESS_TOKEN }}" > apps/website/.env.local
        
      - name: Build affected apps
        run: npx turbo build ${{ steps.get_affected_apps.outputs.turbo_filter }}

      - name: Get affected deployable apps
        id: get_affected_deployable_apps
        env:
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_WORKFLOW_NAME: ${{ github.workflow }}
          GH_TOKEN: ${{ github.token }}
        run: |
          DEPLOY_ARRAY=$(npm run deploy_array --silent --workspace @bluedot/affected-packages)
          echo "deploy_array=$DEPLOY_ARRAY" >> $GITHUB_OUTPUT
    outputs:
      affected_deployable_apps: ${{ steps.get_affected_deployable_apps.outputs.deploy_array }}

  cd:
    needs: ci
    if: ${{ github.ref == 'refs/heads/master' && needs.ci.outputs.affected_deployable_apps != '[]' }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        app: ${{ fromJson(needs.ci.outputs.affected_deployable_apps) }}
    concurrency:
      group: cd_${{ matrix.app }}
    timeout-minutes: 20
    steps:
      - name: Checkout ${{ github.sha }}
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          registry-url: https://registry.npmjs.org/

      - name: Install NPM dependencies
        run: npm ci --audit false --fund false

      - name: Configure infra deployment
        if: matrix.app == '@bluedot/infra'
        run: |
          echo "$INFRA_PULUMI_PASSPHRASE" > apps/infra/passphrase.prod.txt
          mkdir -p ~/.aws
          echo "$INFRA_AWS_CREDENTIALS" > ~/.aws/credentials
        env:
          INFRA_PULUMI_PASSPHRASE: ${{ secrets.INFRA_PULUMI_PASSPHRASE }}
          INFRA_AWS_CREDENTIALS: ${{ secrets.INFRA_AWS_CREDENTIALS }}

      - name: Configure k8s deployment
        if: matrix.app != '@bluedot/infra'
        run: |
          echo "$GITHUB_TOKEN" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          mkdir -p ~/.kube
          echo "$K8S_KUBECONFIG" > ~/.kube/config
        env:
          K8S_KUBECONFIG: ${{ secrets.K8S_KUBECONFIG }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy
        run: npm run deploy:cd --workspace ${{ matrix.app }}
